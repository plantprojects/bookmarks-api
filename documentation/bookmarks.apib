FORMAT: 1A

# Bookmarks REST API 1.0
Bookmarks is an API for managing bookmark data, bookmark tags, and bookmark users.

# Group Bookmarks
Group of all bookmark-related resources.

## Bookmarks [/bookmarks{?tag}]
Actions related to the bookmarks as a Group

### Get All Bookmarks [GET]
Returns a list of all bookmarks

+ Parameters
    + tag (string, optional) - Comma separated list of tags to filter the response

+ Response 200 (application/json)
    + Attributes (Success Response)
        + data (Bookmark Collection)
    + Headers

            Location: /bookmarks

### Create Bookmark [POST]
Creates a new Bookmark

+ Request (application/json)
    + Attributes (object, required)
        + id: 1 (number, required)
        + title: PXL Bros (string)
        + url: `http://pxlbros.com` (string, required)
        + thumbnail: filename.jpg (string)
        + description: PXL BROS is a full-service digital agency... (string)
        + tags: `[0, 2, 3]` (object)
        + created_by: user_id (number)

+ Response 201 (application/json)
    + Attributes (Success Response)
        + data (object)
            + bookmarks (array[Bookmark])
    + Headers

            Location: /bookmarks/1

## Bookmark [/bookmarks/{bookmark_id}]
Actions related to a specific bookmark represented by ID bookmark_id.

+ Parameters
    + bookmark_id (number) - Unique identifier for a bookmark in the form of an integer

### Retrieve a Bookmark [GET]
Retrieves bookmark details for the given ID.

+ Response 200 (application/json)
    + Attributes (Success Response)
        + data (object)
            + bookmarks (array[Bookmark])

+ Response 404

### Update Bookmark [PUT]
Updates an existing bookmark

+ Request Update JSON Message (application/json)
    + Attributes (object)
        + title: PXL Bros Website (string)
        + url: pxlbros.com (string, required)
        + thumbnail: filename2.jpg (string)
        + description: PXL BROS is a full-service digital agency... (string)
        + tags: `[1, 4]` (object)

+ Response 200 (application/json)
    + Attributes (Success Response)
        + data (object)
            + bookmarks (array[Bookmark])

### Delete Bookmark [DELETE]
Deletes an existing bookmark permanently.

+ Response 204


# Group Tags
Group of all tag-related resources

## Tag [/tags]
Actions related to the tags as a group.

### Get All Tags [GET]
Returns a list of all tags.

+ Response 200 (application/json)
    + Attributes (Success Response)
        + data (Tag Collection)

    + Headers

            Location: /tags

### Create Tag [POST]
Creates a new tag.

+ Request (application/json)
    + Attributes (object)
        + name: node_api (string) - tag name, multiple words separated by underscores

+ Response 201 (application/json)
    + Attributes (Success Response)
        + data (object)
            + tags (array[Tag])
    + Headers

            Location: /tags/1

## Tag [/tags/{tag_id}]
Actions related to a specific tag represented by ID tag_id

+ Parameters
    + tag_id (number) - ID of the Tag in the form of an integer.

### Get Tag [GET]
Gets the tag details

+ Response 200 (application/json)
    + Attributes (Success Response)
        + data (object)
            + tags (array[Tag])

### Update Tag [PUT]
Updates the tag specified by {tag_id}

+ Request (application/json)
    + Attributes (Success Response)
        + name: JavaScript

+ Response 200 (application/json)
    + Attributes (Success Response)
        + data (object)
            + tags (array[Tag])

### Delete Tag [DELETE]
Deletes tag permanently

+ Response 204

# Group Bookmark Tags
## Bookmark Tags [/bookmark-tags{?bookmark,tag}]

### Get all Bookmark Tags [GET]
Get all Bookmark Tags with filters applied

+ Parameters
    + bookmark (number, optional) - Id of the Bookmark the bookmark tag relationships will be returned for.
    + tag (number, optional) - Id of the Tag the bookmark tag relationships will be returned for.

+ Response 200 (application/json)
    + Attributes (Success Response)
        + data (object)
            + bookmark_tags (array[Bookmark Tag])

### Create Bookmark Tag relationship [POST]
Create a new Bookmark Tag relationship

+ Request (application/json)
    + Attributes (object)
        + bookmark: 1 (number)
        + movie: 1 (number)

+ Response 201 (application/json)
    + Attributes(Success Response)
        + data (object)
            + bookmark_tags (array[Bookmark Tag])
    + Headers

            Location: /bookmark-tags/9843

## Bookmark Tag Relationship [/bookmark-tags/{bookmark_tag_id}]

+ Parameters
    + bookmark_tag_id (number) - ID of the Bookmark Tag Relationship in the form of an integer

### Get Relationship [GET]
Returns the Relationship specified by {bookmark_tag_id}

+ Response 200 (application/json)
    + Attributes (Success Response)
        + data (object)
            + bookmark_tags (array[Bookmark Tag])

+ Response 404 (application/json)
    + Attributes (Not Found Response)

### Update Relationship [PUT]
Updates the relationship specified by {bookmark_tag_id}

+ Request (application/json)
    + Attributes (object)
        + bookmark: 1 (number)
        + tag: 2 (number)
+ Response 200 (application/json)
    + Attributes (Success Response)
        + data (object)
            + bookmark_tag (array[Bookmark Tag])

### Delete Relationship [DELETE]
Deletes the relationship specified by {bookmark_tag_id}

+ Response 204


# Group Users
Group of all user-related resources

## User [/users]
Actions related to the users as a group.

### List All Users [GET]
Returns a list of all users.

+ Response 200 (application/json)
    + Attributes (Success Response)
        + data (User Collection)

    + Headers

            Location: /users

### Create User [POST]
Creates a new user.

+ Request (application/json)
    + Attributes (object)
        + id: user_id (number) - ID of the User in the form of an integer.
        + username: sarahb (string) - Name of User in the form of a string with no spaces or special characters
        + avatar: filename.jpg (string)
        + created_at: 1439839581 (number) - Timestamp of when the User was created

+ Response 201 (application/json)
    + Attributes (Success Response)
        + data (object)
            + users (array[User])
    + Headers

            Location: /users/1

## User [/users/{user_id}]
Actions related to a specific user represented by ID user_id

+ Parameters
    + user_id (number) - ID of user in the form of an integer.

### Get User [GET]
Gets the user details

+ Response 200 (application/json)
    + Attributes (Success Response)
        + data (object)
            + users (array[User])

### Update User [PUT]
Updates the user specified by {user_id}

+ Request (application/json)
    + Attributes (Success Response)
        + username: sarahbostwick
        + avatar: filename2.jpg (string)

+ Response 200 (application/json)
    + Attributes (Success Response)
        + data (object)
            + users (array[User])

### Delete User [DELETE]
Deletes user permanently

+ Response 204


# Data Structure

## Success Response (object)
+ status: success (string)

## Not Found Response (object)

## Bookmark (object)
+ id: 1 (number)
+ title: PXL Bros Website (string)
+ url: `http://pxlbros.com` (string)
+ thumbnail: filename.jpg (string)
+ description: PXL BROS is a full-service digital agency... (string)
+ tags (array)
    + 2 (number)
    + 5 (number)
    + 8 (number)
+ created_by: user_id (number)

## Bookmark Collection (object)
+ bookmarks (array[Bookmark]) - An array of bookmark objects

## Bookmark Collection Response (object)
+ status: success (string)
+ data (Bookmark Collection)

## Tag (object)
+ id: 1 (number)
+ name: JavaScript (string)

## Tag Collection (object)
+ tags (array[Tag]) - An array of tag objects

## Tag Collection Response (object)
+ status: success (string)
+ data (Tag Collection)

## Bookmark Tag (object)
+ id: 8291 (number)
+ tag: 1 (number)
+ bookmark: 55 (number)
+ links (array)
    + link (object)
        + rel: tag (string)
        + href: /tags/8298
    + link (object)
        + rel: bookmark (string)
        + href: /boomarks/55

## User (object)
+ id: 1 (number)
+ username: sarahbostwick (string)
+ avatar: filename.jpg (string)
+ created_at: 1439839581 (number)

## User Collection (object)
+ users (array[User]) - An array of user objects

## User Collection Response (object)
+ status: sucess (string)
+ data (User Collection)
